---

/TEST_OUTPUT/workspace/src/another_consumer.rs
References in File: 2
At: L4:C5, L17:C22

 1|// Another consumer module for testing references
 2|use crate::helper::helper_function;
 3|use crate::types::{
 4|    SharedInterface, SharedStruct, SharedType, SHARED_CONSTANT,
 5|};
 6|
 7|pub fn another_consumer_function() {
 8|    // Use the helper function
 9|    let result = helper_function();
...
12|    // Use shared struct
13|    let s = SharedStruct::new("another test");
14|    println!("Struct in another consumer: {}", s.name);
15|
16|    // Use shared interface
17|    let _iface: &dyn SharedInterface = &s;
18|    
19|    // Use shared constant
20|    println!("Constant in another consumer: {}", SHARED_CONSTANT);
21|
22|    // Use shared type

---

/TEST_OUTPUT/workspace/src/consumer.rs
References in File: 2
At: L4:C5, L17:C21

 1|// Consumer module for testing references
 2|use crate::helper::helper_function;
 3|use crate::types::{
 4|    SharedInterface, SharedStruct, SharedType, SHARED_CONSTANT,
 5|};
 6|
 7|pub fn consumer_function() {
 8|    // Use the helper function
 9|    let result = helper_function();
...
12|    // Use shared struct
13|    let s = SharedStruct::new("test");
14|    println!("Struct method: {}", s.method());
15|
16|    // Use shared interface
17|    let iface: &dyn SharedInterface = &s;
18|    println!("Interface method: {}", iface.get_name());
19|
20|    // Use shared constant
21|    println!("Constant: {}", SHARED_CONSTANT);
22|

---

/TEST_OUTPUT/workspace/src/types.rs
References in File: 1
At: L70:C6

70|impl SharedInterface for SharedStruct {
71|    fn get_name(&self) -> String {
72|        self.name.clone()
73|    }
74|}
