---

/TEST_OUTPUT/workspace/another_consumer.ts
References in File: 1
At: L21:C5

12|export function AnotherConsumerFunction(): void {
...
16|  // Using SharedClass differently
17|  const instance = new SharedClass("another instance");
18|  
19|  // Using SharedInterface
20|  const iface: SharedInterface = {
21|    getName: () => "custom implementation",
22|    getValue: () => 100
23|  };
24|  
25|  // Using SharedType
26|  const mixedArray: SharedType[] = ["string", 42, "another"];

---

/TEST_OUTPUT/workspace/consumer.ts
References in File: 2
At: L22:C21, L17:C24

12|export function ConsumerFunction(): void {
13|  console.log("Consumer calling:", SharedFunction());
14|  
15|  // Using SharedClass
16|  const instance = new SharedClass("test instance");
17|  console.log(instance.getName());
18|  instance.helperMethod();
19|  
20|  // Using SharedInterface
21|  const iface: SharedInterface = instance;
22|  console.log(iface.getName());
23|  console.log(iface.getValue());
24|  
25|  // Using SharedType
26|  const value: SharedType = "string value";
27|  const numValue: SharedType = 42;

---

/TEST_OUTPUT/workspace/helper.ts
References in File: 1
At: L22:C3

15|export class SharedClass implements SharedInterface {
...
17|
18|  constructor(name: string) {
19|    this.name = name;
20|  }
21|  
22|  getName(): string {
23|    return this.name;
24|  }
25|  
26|  getValue(): number {
27|    return 42;

---

/TEST_OUTPUT/workspace/another_consumer.ts
References in File: 1
At: L21:C5

12|export function AnotherConsumerFunction(): void {
...
16|  // Using SharedClass differently
17|  const instance = new SharedClass("another instance");
18|  
19|  // Using SharedInterface
20|  const iface: SharedInterface = {
21|    getName: () => "custom implementation",
22|    getValue: () => 100
23|  };
24|  
25|  // Using SharedType
26|  const mixedArray: SharedType[] = ["string", 42, "another"];

---

/TEST_OUTPUT/workspace/consumer.ts
References in File: 2
At: L22:C21, L17:C24

12|export function ConsumerFunction(): void {
13|  console.log("Consumer calling:", SharedFunction());
14|  
15|  // Using SharedClass
16|  const instance = new SharedClass("test instance");
17|  console.log(instance.getName());
18|  instance.helperMethod();
19|  
20|  // Using SharedInterface
21|  const iface: SharedInterface = instance;
22|  console.log(iface.getName());
23|  console.log(iface.getValue());
24|  
25|  // Using SharedType
26|  const value: SharedType = "string value";
27|  const numValue: SharedType = 42;

---

/TEST_OUTPUT/workspace/helper.ts
References in File: 1
At: L10:C3

 9|export interface SharedInterface {
10|  getName(): string;
11|  getValue(): number;
12|}
