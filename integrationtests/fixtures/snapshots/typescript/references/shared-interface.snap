---

/TEST_OUTPUT/workspace/another_consumer.ts
References in File: 2
At: L4:C3, L20:C16

 1|// Another consumer file that uses elements from the helper file
 2|import { 
 3|  SharedFunction, 
 4|  SharedInterface, 
 5|  SharedClass, 
 6|  SharedType, 
 7|  SharedConstant, 
 8|  SharedEnum 
 9|} from './helper';
...
12|export function AnotherConsumerFunction(): void {
...
15|  
16|  // Using SharedClass differently
17|  const instance = new SharedClass("another instance");
18|  
19|  // Using SharedInterface
20|  const iface: SharedInterface = {
21|    getName: () => "custom implementation",
22|    getValue: () => 100
23|  };
24|  
25|  // Using SharedType

---

/TEST_OUTPUT/workspace/consumer.ts
References in File: 2
At: L4:C3, L21:C16

 1|// Consumer file that uses elements from the helper file
 2|import { 
 3|  SharedFunction, 
 4|  SharedInterface, 
 5|  SharedClass, 
 6|  SharedType, 
 7|  SharedConstant, 
 8|  SharedEnum 
 9|} from './helper';
...
12|export function ConsumerFunction(): void {
...
16|  const instance = new SharedClass("test instance");
17|  console.log(instance.getName());
18|  instance.helperMethod();
19|  
20|  // Using SharedInterface
21|  const iface: SharedInterface = instance;
22|  console.log(iface.getName());
23|  console.log(iface.getValue());
24|  
25|  // Using SharedType
26|  const value: SharedType = "string value";

---

/TEST_OUTPUT/workspace/helper.ts
References in File: 1
At: L15:C37

15|export class SharedClass implements SharedInterface {
16|  private name: string;
17|
18|  constructor(name: string) {
19|    this.name = name;
20|  }
